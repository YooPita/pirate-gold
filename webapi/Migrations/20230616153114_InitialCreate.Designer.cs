// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PirateGold.DataBase;

#nullable disable

namespace webapi.Migrations
{
    [DbContext(typeof(PirateGoldDbContext))]
    [Migration("20230616153114_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PirateGold.DataBase.Models.Cartridge", b =>
                {
                    b.Property<int>("CartridgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CartridgeId"));

                    b.Property<int?>("CartridgePublisherId")
                        .HasColumnType("integer");

                    b.Property<int?>("CartridgeTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Catalog")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CartridgeId");

                    b.HasIndex("CartridgePublisherId");

                    b.HasIndex("CartridgeTypeId");

                    b.ToTable("Cartridges");
                });

            modelBuilder.Entity("PirateGold.DataBase.Models.CartridgePublisher", b =>
                {
                    b.Property<int>("CartridgePublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CartridgePublisherId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CartridgePublisherId");

                    b.ToTable("CartridgePublishers");
                });

            modelBuilder.Entity("PirateGold.DataBase.Models.CartridgeToGame", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<int>("CartridgeId")
                        .HasColumnType("integer");

                    b.HasKey("GameId", "CartridgeId");

                    b.HasIndex("CartridgeId");

                    b.ToTable("CartridgeGame");
                });

            modelBuilder.Entity("PirateGold.DataBase.Models.CartridgeToPhoto", b =>
                {
                    b.Property<int>("PhotoId")
                        .HasColumnType("integer");

                    b.Property<int>("CartridgeId")
                        .HasColumnType("integer");

                    b.HasKey("PhotoId", "CartridgeId");

                    b.HasIndex("CartridgeId");

                    b.ToTable("CartridgePhoto");
                });

            modelBuilder.Entity("PirateGold.DataBase.Models.CartridgeToRom", b =>
                {
                    b.Property<int>("RomId")
                        .HasColumnType("integer");

                    b.Property<int>("CartridgeId")
                        .HasColumnType("integer");

                    b.HasKey("RomId", "CartridgeId");

                    b.HasIndex("CartridgeId");

                    b.ToTable("CartridgeRom");
                });

            modelBuilder.Entity("PirateGold.DataBase.Models.CartridgeType", b =>
                {
                    b.Property<int>("CartridgeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CartridgeTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CartridgeTypeId");

                    b.ToTable("CartridgeTypes");
                });

            modelBuilder.Entity("PirateGold.DataBase.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GameId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("PirateGold.DataBase.Models.Photo", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PhotoId"));

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PhotoId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("PirateGold.DataBase.Models.Rom", b =>
                {
                    b.Property<int>("RomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RomId"));

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RomId");

                    b.ToTable("Roms");
                });

            modelBuilder.Entity("PirateGold.DataBase.Models.Cartridge", b =>
                {
                    b.HasOne("PirateGold.DataBase.Models.CartridgePublisher", "CartridgePublisher")
                        .WithMany()
                        .HasForeignKey("CartridgePublisherId");

                    b.HasOne("PirateGold.DataBase.Models.CartridgeType", "CartridgeType")
                        .WithMany()
                        .HasForeignKey("CartridgeTypeId");

                    b.Navigation("CartridgePublisher");

                    b.Navigation("CartridgeType");
                });

            modelBuilder.Entity("PirateGold.DataBase.Models.CartridgeToGame", b =>
                {
                    b.HasOne("PirateGold.DataBase.Models.Cartridge", "Cartridge")
                        .WithMany("CartridgeGames")
                        .HasForeignKey("CartridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PirateGold.DataBase.Models.Game", "Game")
                        .WithMany("CartridgeGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartridge");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("PirateGold.DataBase.Models.CartridgeToPhoto", b =>
                {
                    b.HasOne("PirateGold.DataBase.Models.Cartridge", "Cartridge")
                        .WithMany("CartridgePhotos")
                        .HasForeignKey("CartridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PirateGold.DataBase.Models.Photo", "Photo")
                        .WithMany("CartridgePhotos")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartridge");

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("PirateGold.DataBase.Models.CartridgeToRom", b =>
                {
                    b.HasOne("PirateGold.DataBase.Models.Cartridge", "Cartridge")
                        .WithMany("CartridgeRoms")
                        .HasForeignKey("CartridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PirateGold.DataBase.Models.Rom", "Rom")
                        .WithMany("CartridgeRoms")
                        .HasForeignKey("RomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartridge");

                    b.Navigation("Rom");
                });

            modelBuilder.Entity("PirateGold.DataBase.Models.Cartridge", b =>
                {
                    b.Navigation("CartridgeGames");

                    b.Navigation("CartridgePhotos");

                    b.Navigation("CartridgeRoms");
                });

            modelBuilder.Entity("PirateGold.DataBase.Models.Game", b =>
                {
                    b.Navigation("CartridgeGames");
                });

            modelBuilder.Entity("PirateGold.DataBase.Models.Photo", b =>
                {
                    b.Navigation("CartridgePhotos");
                });

            modelBuilder.Entity("PirateGold.DataBase.Models.Rom", b =>
                {
                    b.Navigation("CartridgeRoms");
                });
#pragma warning restore 612, 618
        }
    }
}
